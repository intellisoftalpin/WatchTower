name: build_apk

on: workflow_dispatch

env:
  FILE_APP_VERSION: ./VERSION
  ARTIFACTS_DIRECTORY: ./artifacts

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      incremented_build_number: ${{ steps.build_version_bump.outputs.app_build_number }}
      version_number: ${{ steps.version_number_get.outputs.app_version_number }}
    
    steps:
      - run: ls
      - uses: actions/checkout@v3.2.0
      - run: ls
      
      - name: Install Flutter
        id: flutter_install
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true
          cache-key: 'flutter-:os:-:channel:-:version:-:arch:-:hash:' 
          cache-path: '${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:'
          architecture: x64
        
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
        
      - name: Cache apt-install
        uses: daaku/gh-action-apt-install@v4
        with:
          packages: ninja-build libgtk-3-dev
        
      - name: Cache dependencies
        uses: actions/cache@v3.2.2
        with:
          path: ${{ env.PUB_CACHE }}
          key: ${{ runner.OS }}-pub-cache-${{ hashFiles('./pubspec.lock') }}
          restore-keys: ${{ runner.OS }}-pub-cache-
            
      - name: Install dependencies
        run: flutter pub get
        
      - name: Copy keystore.jks
        run: (echo ${{ secrets.KEYSTORE_JKS_BASE64 }} | base64 --decode) > $KEYSTORE_JKS
        env:
          KEYSTORE_JKS: ./android/app/watchtower.jks

      - name: Copy key.properties
        run: (echo ${{ secrets.KEY_PROPERTIES_BASE64 }} | base64 --decode) > $KEY_PROPERTIES
        env:
          KEY_PROPERTIES: ./android/key.properties
          
      - name: App Version Number Get
        id: version_number_get
        run: |
          VERSION_NUMBER=$(cat $FILE_APP_VERSION)
          echo "APP_VERSION_NUMBER=$VERSION_NUMBER" >> $GITHUB_ENV
          cat $GITHUB_ENV
          echo "app_version_number=$VERSION_NUMBER" >> $GITHUB_OUTPUT
          cat $GITHUB_OUTPUT
          
      - name: App Build Version Bump
        id: build_version_bump
        run: |
          APP_BUILD_NUMBER=$(($BUILD_NUMBER+1))
          echo "APP_BUILD_NUMBER_INCREMENTED=$APP_BUILD_NUMBER" >> $GITHUB_ENV
          echo "app_build_number=$APP_BUILD_NUMBER" >> $GITHUB_OUTPUT
          cat $GITHUB_OUTPUT
        env:
          BUILD_NUMBER: ${{ secrets.BUILD_NUMBER }}
          
      - name: App Build Secret Update
        uses: gliech/create-github-secret-action@v1.4.10
        with:
          pa_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          name: BUILD_NUMBER
          value: ${{ env.APP_BUILD_NUMBER_INCREMENTED }}
          
      - name: Artifacts Directory Setup
        run: mkdir ${{ env.ARTIFACTS_DIRECTORY }}
          
      - name: Flutter build apk
        run: |
          flutter build apk ./lib/main.dart --release --build-number=${{ env.APP_BUILD_NUMBER_INCREMENTED }} --build-name=${{ env.APP_VERSION_NUMBER }}.${{ env.APP_BUILD_NUMBER_INCREMENTED }}
          cp $APK_FILE_PATH $ARTIFACTS_APK_PATH
        env:
          APK_FILE_PATH: ./build/app/outputs/apk/release/app-release.apk
          ARTIFACTS_APK_PATH: ./artifacts/app-release.apk
         
      - name: Artifacts Upload
        uses: actions/upload-artifact@v3.1.1
        with:
          name: apps-artifacts
          path: ${{ env.ARTIFACTS_DIRECTORY }}
          retention-days: 1
          
  deploy:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Artifacts Download
        uses: actions/download-artifact@v3.0.1
        with:
          name: apps-artifacts
        
      - name: Create zip for apk
        run: |
          mkdir ./apk
          cp $APK_FILE_PATH ./apk/watchtower.${{ needs.build.outputs.version_number }}.${{ needs.build.outputs.incremented_build_number }}.apk
          zip -j ./apk/watchtower.${{ needs.build.outputs.version_number }}.${{ needs.build.outputs.incremented_build_number }}.zip ./apk/watchtower.${{ needs.build.outputs.version_number }}.${{ needs.build.outputs.incremented_build_number }}.apk
        env:
          APK_FILE_PATH: ./app-release.apk
        
      - name: APK send to Telegram chat
        run: curl -v -F "chat_id=${{ secrets.TELEGRAM_CHAT_ID }}" -F document=@./apk/watchtower.${{ needs.build.outputs.version_number }}.${{ needs.build.outputs.incremented_build_number }}.zip -F "caption=WatchTower build is ready!" https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendDocument --http1.1
      
